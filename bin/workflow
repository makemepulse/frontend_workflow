#!/usr/bin/env node
'use strict'

const fs     = require('fs-extra')
const subarg = require('subarg')
const spawn  = require('child_process').spawn

const requiredir = require('../lib/require_dir')
const Lib        = requiredir(`lib`)
const options    = subarg(process.argv.slice(2), {})
const action     = options._[0]

let pkg = fs.readJsonSync(`${process.cwd()}/package.json`)
if (pkg.frontend_workflow) {
  options.workflow_path = pkg.frontend_workflow.path || process.cwd()
  options.workflow_name = pkg.frontend_workflow.name || 'frontend_workflow'
}

switch (action) {
  case 'setup':
  case 'setup:run': {
    Lib.setup.run(options)
    break;
  }
  case 'commands-list': {
    Lib.setup.commandList(options)
    break;
  }
  default: {

    try {
      const Tasks = requiredir(`${options.workflow_path}/${options.workflow_name}/tasks`, true)
      if (Tasks.hasOwnProperty(action)) {
        spawn('node', [`${options.workflow_path}/${options.workflow_name}`, action], {stdio:'inherit'})
        return
      }
    } catch(e) {}

    spawn('node', [`${options.workflow_path}/${options.workflow_name}`, action], {stdio:'inherit'})
  }
}
